线程简单的理解就是一堆指令，os调度cpu最小的单位就是线程
进程：qq要以一个整体的形式暴露给操作系统，里面包含对各种资源的调用和管理，内存管理
      对各种资源管理的集合就可以叫做进程
线程：都是操作系统调度单位，是一窜指令的集合
     all the threads in a process have the same view of the memory
     所有在同一个进程里的所有线程是共享同一块内存空间

进程和线程的运行速度是没有可比性的
区别：线程共享内存空间，进程是独立的内存空间
    线程可以访问在一个进程里的数据，数据是共享的可以直接访问。多个子进程数据 是不共享的，是完全独立的，不能直接访问
    同一个进程的线程之间可以进行交流，两个进程之间是独立的想通信必须通过一的中间代理来实现
    新的线程容易创建，新的进程创建需要对其父进程进行一次克隆。
    一个线程可以控制和操作同一进程里的其他线程，但是进程只能操作子进程
    主线程的修改有可能会影响到其他线程的运行的行为，对于父进程的修改对其子进程没有影响

进程要操作cpu，必须要创建一个线程，

python多线程   不适合cpu密集操作型任务，适合io操作密集型任务
多进程解决多核的问题


通过queue和pipe只是实现了进程之间的数据的传递，并没有真正的实现了数据的共享
通过manager实现列表，字典 list, dict, Namespace, Lock, RLock, Semaphore, BoundedSemaphore, Condition, Event, Barrier, Queue, Value and Array
等数据的共享
进程锁是控制进程对屏幕的共享的，不让打印数据乱
